{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Peters\\\\ia_todolist_project\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\nimport Task from './Task.js';\nimport User from './User.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet today = new Date();\nconst defaultUser = new User();\n\nconst App = () => {\n  _s();\n\n  const [date, setDate] = useState('12/22/2021');\n  const [time, setTime] = useState('hh:mm AM/PM');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [year, setYear] = useState(`${today.getFullYear()}`);\n  const [user, setUser] = useState(defaultUser);\n  const [mVisuals, setMVisuals] = useState(['', '', '', '', '', '', '', '', '', '', '', '']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [taskCreate([date, setDate], [time, setTime], [title, setTitle], [description, setDescription]), Calendar([year, setYear], [user, setUser], [mVisuals, setMVisuals])]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6nXcnLsHWTO33tWZMlYU38F4c9o=\");\n\n_c = App;\n\nconst taskCreate = (_ref, _ref2, _ref3, _ref4) => {\n  let [date, setDate] = _ref;\n  let [time, setTime] = _ref2;\n  let [title, setTitle] = _ref3;\n  let [description, setDescription] = _ref4;\n  const options = [['Date:', 'Time:', 'Title:', 'Description:'], ['65', '65', '67.5', '42', '50', '55'], ['25', '25', '22.5', '48', '40', '35'], ['text', 'text', 'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM', '', '', 'none']];\n\n  const getStyle = i => {\n    return {\n      left: `${options[2][i]}%`,\n      width: `${options[1][i]}%`,\n      top: `${10 * i + 10}%`\n    };\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (date.split(\"/\")[0].length == 2 && date.split(\"/\")[1].length == 2 && date.split(\"/\")[2].length == 4 && !isNaN(date.split(\"/\")[0]) && !isNaN(date.split(\"/\")[1]) && !isNaN(date.split(\"/\")[2])) {\n      let task = new Task();\n      task.newTask(date, time, title, description);\n      defaultUser.addTask(task);\n    } else alert(\"Your date is likely formated incorrectly. Try doing so in the mm/dd/yyyy format\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskCreateWindow\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"taskCreateTitle\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), options[0].map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"taskCreateTxt\",\n        style: {\n          top: `${10 * i + 10}%`\n        },\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: date,\n        onChange: e => {\n          setDate(e.target.value);\n        },\n        style: getStyle(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: time,\n        onChange: e => {\n          setTime(e.target.value);\n        },\n        style: getStyle(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        style: getStyle(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: description,\n        onChange: e => {\n          setDescription(e.target.value);\n        },\n        style: getStyle(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          top: '80%',\n          height: '10%',\n          width: '40%',\n          left: '30%'\n        },\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nconst Calendar = (_ref5, _ref6, _ref7) => {\n  let [year, setYear] = _ref5;\n  let [user, setUser] = _ref6;\n  let [mVisuals, setMVisuals] = _ref7;\n  let currYear = String(today.getFullYear());\n  let style;\n  const mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const monthFocus = month => {\n    console.log(month);\n  };\n\n  const getMonths = () => {\n    let Months = [];\n\n    for (let x = 0; x < 12; x++) {\n      Months.push(x);\n    }\n\n    return Months;\n  };\n\n  const getMonthVisuals = i => {\n    user.getCalendar().getDatesWithTasks().forEach(xYear => {\n      if (xYear.getYear() == currYear) {\n        xYear.getMonths().forEach(month => {\n          console.log(\"run\" + month.getMonth());\n\n          if (parseInt(month.getTotalPrio()) > 0) {\n            console.log(\"forest\");\n            let tempArr = mVisuals;\n            tempArr[month.getMonth() - 1] = month.getTotalPrio();\n            setMVisuals(tempArr);\n          } else {\n            console.log(\"ran:)\");\n            let tempArr = mVisuals;\n            tempArr[month.getMonth() - 1] = '';\n            setMVisuals(tempArr);\n          }\n        });\n        return;\n      } else {\n        setMVisuals(['', '', '', '', '', '', '', '', '', '', '', '']);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"Year\",\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), getMonths().map(month => {\n      if (month < 4) {\n        style = {\n          top: `13%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      } else if (month < 8) {\n        style = {\n          top: `42%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      } else {\n        style = {\n          top: `71%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Month\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"body\", {\n          className: \"mText\",\n          children: mOfYear[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: mVisuals[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"monthButton\",\n          onClick: () => monthFocus(month)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"taskCreateInput\",\n      style: {\n        position: 'absolute',\n        left: '35%',\n        width: '2em',\n        top: \"3%\"\n      },\n      onClick: () => {\n        currYear = parseInt(year) - 1;\n        setYear(currYear);\n        getMonthVisuals();\n      },\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"taskCreateInput\",\n      style: {\n        position: 'absolute',\n        left: '57%',\n        width: '2em',\n        top: \"3%\"\n      },\n      onClick: () => {\n        currYear = parseInt(year) + 1;\n        setYear(currYear);\n        getMonthVisuals();\n      },\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Calendar;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/App.js"],"names":["useReducer","useState","React","Task","User","today","Date","defaultUser","App","date","setDate","time","setTime","title","setTitle","description","setDescription","year","setYear","getFullYear","user","setUser","mVisuals","setMVisuals","taskCreate","Calendar","options","getStyle","i","left","width","top","handleSubmit","e","preventDefault","split","length","isNaN","task","newTask","addTask","alert","map","option","target","value","position","height","currYear","String","style","mOfYear","monthFocus","month","console","log","getMonths","Months","x","push","getMonthVisuals","getCalendar","getDatesWithTasks","forEach","xYear","getYear","getMonth","parseInt","getTotalPrio","tempArr"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\nimport Task from './Task.js';\nimport User from './User.js';\n\nlet today = new Date();\nconst defaultUser = new User;\nconst App=()=>{\n  const [date, setDate]  = useState('12/22/2021');\n  const [time, setTime]  = useState('hh:mm AM/PM');\n  const [title, setTitle]  = useState('');\n  const [description, setDescription]  = useState('');\n  const [year, setYear] = useState(`${today.getFullYear()}`);\n  const [user, setUser] = useState(defaultUser);\n  const [mVisuals, setMVisuals] = useState(['','','','','','','','','','','','']);\n  return (\n    <div\n    className='bg'>\n      {taskCreate([date, setDate], [time, setTime], [title, setTitle], [description, setDescription])}\n      {Calendar( [year, setYear], [user, setUser], [mVisuals, setMVisuals])}\n    </div>\n  );\n}\nconst taskCreate = ([date, setDate], [time, setTime], [title, setTitle], [description, setDescription]) =>{\n  const options = [['Date:', 'Time:', 'Title:', 'Description:'],['65', '65', '67.5', '42', '50','55'],['25', '25', '22.5', '48', '40', '35'],['text', 'text',  'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM','', '', 'none']]\n  const getStyle = (i) => {\n    return({\n      left:`${options[2][i]}%`, \n      width: `${options[1][i]}%`,\n      top: `${10*i + 10}%`\n    });\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(date.split(\"/\")[0].length == 2 && date.split(\"/\")[1].length == 2 && date.split(\"/\")[2].length == 4 && !isNaN(date.split(\"/\")[0])&& !isNaN(date.split(\"/\")[1])&& !isNaN(date.split(\"/\")[2])){\n      let task = new Task;\n      task.newTask(date, time, title, description);\n      defaultUser.addTask(task);\n    } else alert(\"Your date is likely formated incorrectly. Try doing so in the mm/dd/yyyy format\");\n  }\n  return(\n    <div\n    className='taskCreateWindow'>\n        <form onSubmit={handleSubmit}>\n            <label\n            className='taskCreateTitle'>\n                Create Task\n            </label>\n            {\n                options[0].map((option, i) => \n                    <label \n                    className='taskCreateTxt' \n                    style={{top: `${10*i + 10}%`}}>\n                        {option}\n                    </label>\n                )\n            }\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={date}\n            onChange = {(e)=>{setDate(e.target.value)}}\n            style = {getStyle(0)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={time}\n            onChange = {(e)=>{setTime(e.target.value)}}\n            style = {getStyle(1)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={title}\n            onChange = {(e)=>{setTitle(e.target.value)}}\n            style = {getStyle(2)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={description}\n            onChange = {(e)=>{setDescription(e.target.value)}}\n            style = {getStyle(3)}\n            />\n            <button\n            style = {{position: 'absolute', top: '80%', height: '10%', width: '40%', left: '30%'}}>\n              Create\n            </button>\n        </form>\n    </div>\n  );\n}\nconst Calendar = ([year, setYear], [user, setUser], [mVisuals, setMVisuals]) => {\n  let currYear = String(today.getFullYear());\n  let style;\n  const mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthFocus=(month)=>{\n      console.log(month);\n  }\n  const getMonths=()=>{\n    let Months=[];\n    for(let x = 0; x < 12; x++){\n      Months.push(x);\n    }\n    return(Months);\n  }\n  const getMonthVisuals=(i)=>{\n    user.getCalendar().getDatesWithTasks().forEach(xYear => {\n      if(xYear.getYear() == currYear){\n        xYear.getMonths().forEach(month => {\n          console.log(\"run\"+month.getMonth());\n          if(parseInt(month.getTotalPrio()) > 0){\n            console.log(\"forest\");\n            let tempArr = mVisuals;\n            tempArr[month.getMonth()-1] = month.getTotalPrio();\n            setMVisuals(tempArr);\n          }\n          else{\n            console.log(\"ran:)\");\n            let tempArr = mVisuals;\n            tempArr[month.getMonth()-1] = '';\n            setMVisuals(tempArr);\n          }\n        });\n        return;\n      }\n      else{\n        setMVisuals(['','','','','','','','','','','','']);\n      }\n    });\n  }\n  return(\n    <div \n    className=\"Calendar\">\n      <label className='Year'>{year}</label>\n      {\n        getMonths().map(month => {\n            if(month < 4){\n            style = {\n                top: `13%`,\n                left: `${24.67*(month%4)+(month%4)*.3}%`\n            }\n            } else if(month < 8){\n            style = {\n                top: `42%`,\n                left: `${24.67*(month%4)+(month%4)*.3}%`\n            }\n            } else{\n            style = {\n                top: `71%`,\n                left: `${24.67*(month%4)+(month%4)*.3}%`\n            }\n            }\n            return(\n              <div \n              className=\"Month\" style = {style}>\n                  <body \n                  className = \"mText\">\n                    {mOfYear[month]}\n                  </body>\n                  <label>\n                    {\n                      mVisuals[month]\n                    }\n                  </label>\n                  <button \n                  className = 'monthButton' \n                  onClick = {() => monthFocus(month)} >\n                  </button>\n              </div>\n            );\n        })\n      }\n      <button className='taskCreateInput' style = {{position: 'absolute', left: '35%', width: '2em', top: \"3%\"}} onClick = {()=>{currYear = parseInt(year)-1; setYear(currYear);  getMonthVisuals(); }}>←</button>\n      <button className='taskCreateInput' style = {{position: 'absolute', left: '57%', width: '2em', top: \"3%\"}} onClick = {()=>{currYear = parseInt(year)+1; setYear(currYear); getMonthVisuals(); }}>→</button>\n    </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}