{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Peters\\\\ia_todolist_project\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\nimport Task from './Task.js';\nimport User from './User.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet today = new Date();\nlet [focusedMonth, setFocusedMonth] = [1, 1];\nlet currYear;\nlet [date, setDate] = [1, 1];\nlet [time, setTime] = [1, 1];\nlet [title, setTitle] = [1, 1];\nlet [description, setDescription] = [1, 1];\nlet [year, setYear] = [1, 1];\nconst mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst defaultUser = new User();\n\nconst App = () => {\n  _s();\n\n  [date, setDate] = useState('12/22/2021');\n  [time, setTime] = useState('hh:mm AM/PM');\n  [title, setTitle] = useState('');\n  [description, setDescription] = useState('');\n  [year, setYear] = useState(`${today.getFullYear()}`);\n  const [user, setUser] = useState(defaultUser);\n  const [mVisuals, setMVisuals] = useState(['', '', '', '', '', '', '', '', '', '', '', '']);\n  const [compVisible, setCompVisible] = useState(['block', 'none']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      style: {\n        display: `${compVisible[0]}`\n      },\n      children: [taskCreate(), Calendar([user, setUser], [mVisuals, setMVisuals], [compVisible, setCompVisible]), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"taskCreateInput\",\n        style: {\n          width: '9em',\n          height: \"2em\"\n        },\n        onClick: () => {\n          setCompVisible(['none', 'block']);\n        },\n        children: `View ${mOfYear[focusedMonth]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      style: {\n        display: `${compVisible[1]}`\n      },\n      children: MonthWindow()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"P9cDhSOuBenttiEtgCJaS54xv0w=\");\n\n_c = App;\n\nconst taskCreate = () => {\n  const options = [['Date:', 'Time:', 'Title:', 'Description:'], ['65', '65', '67.5', '42', '50', '55'], ['25', '25', '22.5', '48', '40', '35'], ['text', 'text', 'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM', '', '', 'none']];\n\n  const getStyle = i => {\n    return {\n      left: `${options[2][i]}%`,\n      width: `${options[1][i]}%`,\n      top: `${10 * i + 10}%`\n    };\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (date.split(\"/\")[0].length == 2 && date.split(\"/\")[1].length == 2 && date.split(\"/\")[2].length == 4 && !isNaN(date.split(\"/\")[0]) && !isNaN(date.split(\"/\")[1]) && !isNaN(date.split(\"/\")[2])) {\n      let task = new Task();\n      task.newTask(date, time, title, description);\n      defaultUser.addTask(task);\n    } else alert(\"Your date is likely formated incorrectly. Try doing so in the mm/dd/yyyy format\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskCreateWindow\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"taskCreateTitle\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), options[0].map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"taskCreateTxt\",\n        style: {\n          top: `${10 * i + 10}%`\n        },\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: date,\n        onChange: e => {\n          setDate(e.target.value);\n        },\n        style: getStyle(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: time,\n        onChange: e => {\n          setTime(e.target.value);\n        },\n        style: getStyle(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        style: getStyle(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: description,\n        onChange: e => {\n          setDescription(e.target.value);\n        },\n        style: getStyle(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          top: '80%',\n          height: '10%',\n          width: '40%',\n          left: '30%'\n        },\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\nconst Calendar = (_ref, _ref2, _ref3) => {\n  _s2();\n\n  let [user, setUser] = _ref;\n  let [mVisuals, setMVisuals] = _ref2;\n  let [compVisible, setCompVisible] = _ref3;\n  [focusedMonth, setFocusedMonth] = useState();\n  currYear = String(today.getFullYear());\n  let style;\n\n  const monthFocus = month => {\n    setFocusedMonth(month);\n  };\n\n  const getMonths = () => {\n    let Months = [];\n\n    for (let x = 0; x < 12; x++) {\n      Months.push(x);\n    }\n\n    return Months;\n  };\n\n  const getMonthVisuals = i => {\n    user.getCalendar().getDatesWithTasks().forEach(xYear => {\n      if (xYear.getYear() == currYear) {\n        xYear.getMonths().forEach(month => {\n          if (parseInt(month.getTotalPrio()) > 0) {\n            console.log(month.getTotalPrio());\n            let tempArr = mVisuals;\n            tempArr[month.getMonth() - 1] = `☆ ${month.getTotalPrio()}`;\n            setMVisuals(tempArr);\n            console.log(month.getTotalPrio());\n          } else {\n            let tempArr = mVisuals;\n            tempArr[month.getMonth() - 1] = '';\n            setMVisuals(tempArr);\n          }\n        });\n        console.log(currYear);\n        return;\n      } else {\n        setMVisuals(['', '', '', '', '', '', '', '', '', '', '', '']);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"Year\",\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), getMonths().map(month => {\n      if (month < 4) {\n        style = {\n          top: `13%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      } else if (month < 8) {\n        style = {\n          top: `42%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      } else {\n        style = {\n          top: `71%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Month\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"body\", {\n          className: \"mText\",\n          children: mOfYear[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mText\",\n          style: {\n            left: \"40%\",\n            position: 'absolute'\n          },\n          children: mVisuals[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"monthButton\",\n          onClick: () => monthFocus(month)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"taskCreateInput\",\n      style: {\n        position: 'absolute',\n        left: '35%',\n        width: '2em',\n        top: \"3%\"\n      },\n      onClick: () => {\n        currYear = parseInt(year) - 1;\n        setYear(currYear);\n        getMonthVisuals();\n      },\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"taskCreateInput\",\n      style: {\n        position: 'absolute',\n        left: '57%',\n        width: '2em',\n        top: \"3%\"\n      },\n      onClick: () => {\n        currYear = parseInt(year) + 1;\n        setYear(currYear);\n        getMonthVisuals();\n      },\n      children: \"\\u2192\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Calendar, \"VhlnxxH3xh7Qs17KADUJ8wvRSZs=\");\n\n_c2 = Calendar;\n\nconst MonthWindow = () => {\n  const getDayWindows = () => {\n    let components = [];\n    let numOfDays = new Date(year, focusedMonth + 1, 0).getDate();\n    console.log(numOfDays);\n    let x = 0;\n\n    for (let z = 1; x < numOfDays; z++) {\n      for (let y = 0; y < 7 && x < numOfDays; y++) {\n        components.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            backgroundColor: 'rgb(46, 46, 46)',\n            height: '16%',\n            width: '12%',\n            top: `${20 * z}%`,\n            left: `${14 * y + 2}%`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"body\", {\n            children: `-${x + 1}th`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this));\n        x++;\n      }\n    }\n\n    return components;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [taskCreate(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Year\",\n        children: mOfYear[focusedMonth]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), getDayWindows()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = MonthWindow;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Calendar\");\n$RefreshReg$(_c3, \"MonthWindow\");","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/App.js"],"names":["useReducer","useState","React","Task","User","today","Date","focusedMonth","setFocusedMonth","currYear","date","setDate","time","setTime","title","setTitle","description","setDescription","year","setYear","mOfYear","defaultUser","App","getFullYear","user","setUser","mVisuals","setMVisuals","compVisible","setCompVisible","display","taskCreate","Calendar","width","height","MonthWindow","options","getStyle","i","left","top","handleSubmit","e","preventDefault","split","length","isNaN","task","newTask","addTask","alert","map","option","target","value","position","String","style","monthFocus","month","getMonths","Months","x","push","getMonthVisuals","getCalendar","getDatesWithTasks","forEach","xYear","getYear","parseInt","getTotalPrio","console","log","tempArr","getMonth","getDayWindows","components","numOfDays","getDate","z","y","backgroundColor"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\nimport Task from './Task.js';\nimport User from './User.js';\n\nlet today = new Date();\nlet [focusedMonth, setFocusedMonth] = [1, 1];\nlet currYear;\nlet [date, setDate] = [1, 1];\nlet [time, setTime] = [1, 1];\nlet [title, setTitle] = [1, 1];\nlet [description, setDescription] = [1, 1];\nlet [year, setYear] = [1,1];\nconst mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst defaultUser = new User;\nconst App=()=>{\n  [date, setDate]  = useState('12/22/2021');\n  [time, setTime]  = useState('hh:mm AM/PM');\n  [title, setTitle]  = useState('');\n  [description, setDescription]  = useState('');\n  [year, setYear] = useState(`${today.getFullYear()}`);\n  const [user, setUser] = useState(defaultUser);\n  const [mVisuals, setMVisuals] = useState(['','','','','','','','','','','','']);\n  const [compVisible, setCompVisible] = useState(['block', 'none']);\n  return (\n    <div>\n      <div\n      className='bg'\n      style={{display: `${compVisible[0]}`}}>\n        {taskCreate()}\n        {Calendar([user, setUser], [mVisuals, setMVisuals], [compVisible, setCompVisible])}\n        <button\n        className='taskCreateInput'\n        style={{width: '9em', height: \"2em\"}}\n        onClick={()=>{\n          setCompVisible(['none', 'block']);\n        }}>\n          {`View ${mOfYear[focusedMonth]}`}\n        </button>\n      </div>\n      <div\n      className='bg'\n      style={{display: `${compVisible[1]}`}}>\n        {MonthWindow()}\n      </div>\n    </div>\n  );\n}\nconst taskCreate = () =>{\n  const options = [['Date:', 'Time:', 'Title:', 'Description:'],['65', '65', '67.5', '42', '50','55'],['25', '25', '22.5', '48', '40', '35'],['text', 'text',  'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM','', '', 'none']]\n  const getStyle = (i) => {\n    return({\n      left:`${options[2][i]}%`, \n      width: `${options[1][i]}%`,\n      top: `${10*i + 10}%`\n    });\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(date.split(\"/\")[0].length == 2 && date.split(\"/\")[1].length == 2 && date.split(\"/\")[2].length == 4 && !isNaN(date.split(\"/\")[0])&& !isNaN(date.split(\"/\")[1])&& !isNaN(date.split(\"/\")[2])){\n      let task = new Task;\n      task.newTask(date, time, title, description);\n      defaultUser.addTask(task);\n    } else alert(\"Your date is likely formated incorrectly. Try doing so in the mm/dd/yyyy format\");\n  }\n  return(\n    <div\n    className='taskCreateWindow'>\n        <form onSubmit={handleSubmit}>\n            <label\n            className='taskCreateTitle'>\n                Create Task\n            </label>\n            {\n                options[0].map((option, i) => \n                    <label \n                    className='taskCreateTxt' \n                    style={{top: `${10*i + 10}%`}}>\n                        {option}\n                    </label>\n                )\n            }\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={date}\n            onChange = {(e)=>{setDate(e.target.value)}}\n            style = {getStyle(0)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={time}\n            onChange = {(e)=>{setTime(e.target.value)}}\n            style = {getStyle(1)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={title}\n            onChange = {(e)=>{setTitle(e.target.value)}}\n            style = {getStyle(2)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={description}\n            onChange = {(e)=>{setDescription(e.target.value)}}\n            style = {getStyle(3)}\n            />\n            <button\n            style = {{position: 'absolute', top: '80%', height: '10%', width: '40%', left: '30%'}}>\n              Create\n            </button>\n        </form>\n    </div>\n  );\n}\nconst Calendar = ([user, setUser], [mVisuals, setMVisuals], [compVisible, setCompVisible]) => {\n  [focusedMonth, setFocusedMonth] = useState();\n  currYear = String(today.getFullYear());\n  let style;\n  const monthFocus=(month)=>{\n    setFocusedMonth(month);\n  }\n  const getMonths=()=>{\n    let Months=[];\n    for(let x = 0; x < 12; x++){\n      Months.push(x);\n    }\n    return(Months);\n  }\n  const getMonthVisuals=(i)=>{\n    user.getCalendar().getDatesWithTasks().forEach(xYear => {\n      if(xYear.getYear() == currYear){\n        xYear.getMonths().forEach(month => {\n          if(parseInt(month.getTotalPrio()) > 0){\n            console.log(month.getTotalPrio());\n            let tempArr = mVisuals;\n            tempArr[month.getMonth()-1] = `☆ ${month.getTotalPrio()}`;\n            setMVisuals(tempArr);\n            console.log(month.getTotalPrio());\n          }\n          else{\n            let tempArr = mVisuals;\n            tempArr[month.getMonth()-1] = '';\n            setMVisuals(tempArr);\n          }\n        });\n        console.log(currYear);\n        return;\n      }\n      else{\n        setMVisuals(['','','','','','','','','','','','']);\n      }\n    });\n  }\n  return(\n    <div \n    className=\"Calendar\">\n      <label className='Year'>{year}</label>\n      {\n        getMonths().map(month => {\n            if(month < 4){\n            style = {\n                top: `13%`,\n                left: `${24.67*(month%4)+(month%4)*.3}%`\n            }\n            } else if(month < 8){\n            style = {\n                top: `42%`,\n                left: `${24.67*(month%4)+(month%4)*.3}%`\n            }\n            } else{\n            style = {\n                top: `71%`,\n                left: `${24.67*(month%4)+(month%4)*.3}%`\n            }\n            }\n            return(\n              <div \n              className=\"Month\" style = {style}>\n                  <body \n                  className = \"mText\">\n                    {mOfYear[month]}\n                  </body>\n                  <label className='mText' style = {{left: \"40%\", position: 'absolute'}}>\n                    {\n                      mVisuals[month]\n                    }\n                  </label>\n                  <button \n                  className = 'monthButton' \n                  onClick = {() => monthFocus(month)} >\n                  </button>\n              </div>\n            );\n        })\n      }\n      <button className='taskCreateInput' style = {{position: 'absolute', left: '35%', width: '2em', top: \"3%\"}} onClick = {()=>{currYear = parseInt(year)-1; setYear(currYear);  getMonthVisuals(); }}>←</button>\n      <button className='taskCreateInput' style = {{position: 'absolute', left: '57%', width: '2em', top: \"3%\"}} onClick = {()=>{currYear = parseInt(year)+1; setYear(currYear); getMonthVisuals(); }}>→</button>\n    </div>\n  );\n}\nconst MonthWindow=()=>{\n  const getDayWindows=()=>{\n    let components = [];\n    let numOfDays = new Date(year, focusedMonth + 1, 0).getDate()\n    console.log(numOfDays);\n    let x = 0;\n    for(let z = 1;x < numOfDays; z++){\n      for(let y = 0; y < 7 && x < numOfDays; y++){\n        components.push(<div style={{position: 'absolute', backgroundColor: 'rgb(46, 46, 46)', height: '16%', width: '12%', top: `${20*z}%`, left: `${14*y + 2}%`}}>\n          <body>{`-${x+1}th`}</body>\n        </div>);\n        x++;\n      }\n    }\n    return(components);\n  }\n  return(\n    <div>\n      {taskCreate()}\n      <div className='Calendar'>\n        <label className='Year'>{mOfYear[focusedMonth]}</label>\n        {getDayWindows()}\n      </div>\n    </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}