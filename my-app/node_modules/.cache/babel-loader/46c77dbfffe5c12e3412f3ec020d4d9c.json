{"ast":null,"code":"import Day from \"./Day.js\";\nimport Task from \"./Task.js\";\nimport Year from \"./Year\";\nimport Month from './Month';\n\nconst Calendar = () => {\n  const datesWithTasks = [];\n\n  const addTask = taskIn => {\n    console.log(\"ayy it ran\");\n    let flag = false;\n\n    for (let x = 0; x < datesWithTasks.length; x++) {\n      if (taskIn.getYear() == datesWithTasks[x].getYear()) {\n        for (let y = 0; y < datesWithTasks[x].getYear().getMonths().length; y++) {\n          if (taskIn.getMonth() == datesWithTasks[x].getYear().getMonths()[y].getMonth()) {\n            for (let i = 0; i < datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays().length; i++) {\n              if (taskIn.getDay() == datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays()[i].getDay()) {\n                datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays()[i].getDay().addTask(taskIn);\n                flag = true;\n              }\n            }\n\n            if (!flag) {\n              let day = new Day();\n              day.newDay(taskIn.getDay());\n              day.addTask(taskIn);\n              datesWithTasks[x].getYear().getMonths()[y].getMonth().addDay(day);\n              flag = true;\n            }\n          }\n        }\n\n        if (!flag) {\n          let month = new Month();\n          month.newMonth(taskIn.getMonth());\n          let day = new Day();\n          day.newDay(taskIn.getDay());\n          day.addTask(taskIn);\n          month.addDay(day);\n          datesWithTasks[x].getYear().addMonth(month);\n          flag = true;\n        }\n      }\n    }\n\n    if (!flag) {\n      let year = new Year();\n      year.newYear(taskIn.getYear);\n      let month = new Month();\n      month.newMonth(taskIn.getMonth());\n      let day = new Day();\n      day.newDay(taskIn.getDay());\n      day.addTask(taskIn);\n      month.addDay(day);\n      year.addMonth(month);\n      datesWithTasks.push(year);\n      flag = true;\n    }\n  };\n};\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/Calendar.js"],"names":["Day","Task","Year","Month","Calendar","datesWithTasks","addTask","taskIn","console","log","flag","x","length","getYear","y","getMonths","getMonth","i","getDays","getDay","day","newDay","addDay","month","newMonth","addMonth","year","newYear","push"],"mappings":"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","sourcesContent":["import Day from \"./Day.js\";\r\nimport Task from \"./Task.js\";\r\nimport Year from \"./Year\";\r\nimport Month from './Month';\r\n\r\nconst Calendar=()=>{\r\n    const datesWithTasks = [];\r\n    const addTask=(taskIn)=>{\r\n        console.log(\"ayy it ran\");\r\n        let flag = false;\r\n        for(let x = 0; x < datesWithTasks.length; x++){\r\n            if(taskIn.getYear()==datesWithTasks[x].getYear()){\r\n                for(let y = 0; y < datesWithTasks[x].getYear().getMonths().length; y++){\r\n                    if(taskIn.getMonth()==datesWithTasks[x].getYear().getMonths()[y].getMonth()){\r\n                        for(let i = 0; i < datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays().length; i++){\r\n                            if(taskIn.getDay()==datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays()[i].getDay()){\r\n                                datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays()[i].getDay().addTask(taskIn);\r\n                                flag = true;\r\n                            }\r\n                        }\r\n                        if(!flag){\r\n                            let day = new Day();\r\n                            day.newDay(taskIn.getDay());\r\n                            day.addTask(taskIn);\r\n                            datesWithTasks[x].getYear().getMonths()[y].getMonth().addDay(day);\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                }\r\n                if(!flag){\r\n                    let month = new Month();\r\n                    month.newMonth(taskIn.getMonth());\r\n                    let day = new Day();\r\n                    day.newDay(taskIn.getDay());\r\n                    day.addTask(taskIn);\r\n                    month.addDay(day);\r\n                    datesWithTasks[x].getYear().addMonth(month);\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n        if(!flag){\r\n            let year = new Year();\r\n            year.newYear(taskIn.getYear);\r\n            let month = new Month();\r\n            month.newMonth(taskIn.getMonth());\r\n            let day = new Day();\r\n            day.newDay(taskIn.getDay());\r\n            day.addTask(taskIn);\r\n            month.addDay(day);\r\n            year.addMonth(month);\r\n            datesWithTasks.push(year);\r\n            flag = true;\r\n        }\r\n    }\r\n}\r\nexport default Calendar;\r\n"]},"metadata":{},"sourceType":"module"}