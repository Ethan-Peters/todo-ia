{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Peters\\\\ia_todolist_project\\\\my-app\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\nimport Task from './Task.js';\nimport User from './User.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultUser = new User();\nconst [date, setDate] = useState('mm/dd/yyyy');\nconst [time, setTime] = useState('hh:mm AM/PM');\nconst [title, setTitle] = useState('');\nconst [description, setDescription] = useState('');\n\nclass App extends React.Component {\n  constructor() {\n    this.state = {\n      tasks: defaultUser.getTasks()\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      children: [taskCreate([date, setDate], [time, setTime], [title, setTitle], [description, setDescription]), Calendar()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst taskCreate = (_ref, _ref2, _ref3, _ref4) => {\n  let [date, setDate] = _ref;\n  let [time, setTime] = _ref2;\n  let [title, setTitle] = _ref3;\n  let [description, setDescription] = _ref4;\n  const options = [['Date:', 'Time:', 'Title:', 'Description:'], ['65', '65', '67.5', '42', '50', '55'], ['25', '25', '22.5', '48', '40', '35'], ['text', 'text', 'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM', '', '', 'none']];\n\n  const getStyle = i => {\n    return {\n      left: `${options[2][i]}%`,\n      width: `${options[1][i]}%`,\n      top: `${10 * i + 10}%`\n    };\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (date.split(\"/\")[0].length == 2 && date.split(\"/\")[1].length == 2 && date.split(\"/\")[2].length == 4 && !isNaN(date.split(\"/\")[0]) && !isNaN(date.split(\"/\")[1]) && !isNaN(date.split(\"/\")[2])) {\n      let task = new Task();\n      task.newTask(date, time, title, description);\n      defaultUser.addTask(task);\n    } else alert(\"Your date is likely formated incorrectly. Try doing so in the mm/dd/yyyy format\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskCreateWindow\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"taskCreateTitle\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), options[0].map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"taskCreateTxt\",\n        style: {\n          top: `${10 * i + 10}%`\n        },\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: date,\n        onChange: e => {\n          setDate(e.target.value);\n        },\n        style: getStyle(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: time,\n        onChange: e => {\n          setTime(e.target.value);\n        },\n        style: getStyle(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        style: getStyle(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"taskCreateInput\",\n        type: \"text\",\n        required: true,\n        value: description,\n        onChange: e => {\n          setDescription(e.target.value);\n        },\n        style: getStyle(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          top: '80%',\n          height: '10%',\n          width: '40%',\n          left: '30%'\n        },\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}; //<input defaultValue={options[4][i]} onChange={(evt)=>this.handleChange(i, evt.target.value)} max={5} min={1} type={options[3][i]} className=' taskCreateInput' style={{left: '10%', top: `${10*i + 11}%`, height: '5%', width: `${options[1][i]}%`, left: `${options[2][i]}%`}}>\n\n\nconst Calendar = () => {\n  let today = new Date();\n  let currDay = String(today.getDay() - 1);\n  let currMonth = String(today.getMonth() + 1);\n  let currYear = String(today.getFullYear());\n  let style;\n  const mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const monthFocus = month => {\n    console.log(month);\n  };\n\n  const getMonths = () => {\n    let Months = [];\n\n    for (let x = 0; x < 12; x++) {\n      Months.push(x);\n    }\n\n    return Months;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"Year\",\n      children: `${currYear}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), getMonths().map(month => {\n      if (month < 4) {\n        style = {\n          top: `13%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      } else if (month < 8) {\n        style = {\n          top: `42%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      } else {\n        style = {\n          top: `71%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Month\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"body\", {\n          className: \"mText\",\n          children: mOfYear[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"monthButton\",\n          onClick: () => monthFocus(month)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Calendar;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/App.js"],"names":["logo","useReducer","useState","React","Task","User","defaultUser","date","setDate","time","setTime","title","setTitle","description","setDescription","App","Component","constructor","state","tasks","getTasks","render","taskCreate","Calendar","options","getStyle","i","left","width","top","handleSubmit","e","preventDefault","split","length","isNaN","task","newTask","addTask","alert","map","option","target","value","position","height","today","Date","currDay","String","getDay","currMonth","getMonth","currYear","getFullYear","style","mOfYear","monthFocus","month","console","log","getMonths","Months","x","push"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\nimport Task from './Task.js';\nimport User from './User.js';\n\nconst defaultUser = new User;\nconst [date, setDate]  = useState('mm/dd/yyyy');\nconst [time, setTime]  = useState('hh:mm AM/PM');\nconst [title, setTitle]  = useState('');\nconst [description, setDescription]  = useState('');\nclass App extends React.Component {\n  constructor(){\n    this.state = {\n      tasks: defaultUser.getTasks()\n    };\n  }\n  render() {\n    return (\n      <div\n      className='bg'>\n        {taskCreate([date, setDate], [time, setTime], [title, setTitle], [description, setDescription])}\n        {Calendar()}\n      </div>\n    );\n  }\n}\nconst taskCreate = ([date, setDate], [time, setTime], [title, setTitle], [description, setDescription]) =>{\n  const options = [['Date:', 'Time:', 'Title:', 'Description:'],['65', '65', '67.5', '42', '50','55'],['25', '25', '22.5', '48', '40', '35'],['text', 'text',  'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM','', '', 'none']]\n  const getStyle = (i) => {\n    return({\n      left:`${options[2][i]}%`, \n      width: `${options[1][i]}%`,\n      top: `${10*i + 10}%`\n    });\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(date.split(\"/\")[0].length == 2 && date.split(\"/\")[1].length == 2 && date.split(\"/\")[2].length == 4 && !isNaN(date.split(\"/\")[0])&& !isNaN(date.split(\"/\")[1])&& !isNaN(date.split(\"/\")[2])){\n      let task = new Task;\n      task.newTask(date, time, title, description);\n      defaultUser.addTask(task);\n    } else alert(\"Your date is likely formated incorrectly. Try doing so in the mm/dd/yyyy format\");\n  }\n  return(\n    <div\n    className='taskCreateWindow'>\n        <form onSubmit={handleSubmit}>\n            <label\n            className='taskCreateTitle'>\n                Create Task\n            </label>\n            {\n                options[0].map((option, i) => \n                    <label \n                    className='taskCreateTxt' \n                    style={{top: `${10*i + 10}%`}}>\n                        {option}\n                    </label>\n                )\n            }\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={date}\n            onChange = {(e)=>{setDate(e.target.value)}}\n            style = {getStyle(0)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={time}\n            onChange = {(e)=>{setTime(e.target.value)}}\n            style = {getStyle(1)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={title}\n            onChange = {(e)=>{setTitle(e.target.value)}}\n            style = {getStyle(2)}\n            />\n            <input\n            className=\"taskCreateInput\"\n            type=\"text\"\n            required\n            value={description}\n            onChange = {(e)=>{setDescription(e.target.value)}}\n            style = {getStyle(3)}\n            />\n            <button\n            style = {{position: 'absolute', top: '80%', height: '10%', width: '40%', left: '30%'}}>\n              Create\n            </button>\n        </form>\n    </div>\n  );\n}\n//<input defaultValue={options[4][i]} onChange={(evt)=>this.handleChange(i, evt.target.value)} max={5} min={1} type={options[3][i]} className=' taskCreateInput' style={{left: '10%', top: `${10*i + 11}%`, height: '5%', width: `${options[1][i]}%`, left: `${options[2][i]}%`}}>\nconst Calendar = () => {\n  let today = new Date();\n  let currDay = String(today.getDay()-1)\n  let currMonth = String(today.getMonth()+1);\n  let currYear = String(today.getFullYear());\n  let style;\n  const mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthFocus=(month)=>{\n      console.log(month);\n  }\n  const getMonths=()=>{\n    let Months=[];\n    for(let x = 0; x < 12; x++){\n      Months.push(x);\n    }\n    return(Months);\n  }\n  return(\n    <div \n    className=\"Calendar\">\n                <body \n                className=\"Year\">\n                  {`${currYear}`}\n                </body>\n                {\n                getMonths().map(month => {\n                    if(month < 4){\n                    style = {\n                        top: `13%`,\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\n                    }\n                    } else if(month < 8){\n                    style = {\n                        top: `42%`,\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\n                    }\n                    } else{\n                    style = {\n                        top: `71%`,\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\n                    }\n                    }\n                    return(\n                    <div \n                    className=\"Month\" style = {style}>\n                        <body \n                        className = \"mText\">\n                          {mOfYear[month]}\n                        </body>\n                        <button \n                        className = 'monthButton' \n                        onClick = {() => monthFocus(month)} >\n\n                        </button>\n                    </div>\n                    );\n                })\n                }\n            </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}