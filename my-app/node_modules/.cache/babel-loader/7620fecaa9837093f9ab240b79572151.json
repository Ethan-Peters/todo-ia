{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Peters\\\\ia_todolist_project\\\\my-app\\\\src\\\\Calendar.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet today = new Date();\nlet currDay = String(today.getDay() - 1);\nlet currMonth = String(today.getMonth() + 1);\nlet currYear = String(today.getFullYear());\nconst mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nlet style;\n\nlet getMonths = () => {\n  let Months = [];\n\n  for (let x = 0; x < 12; x++) {\n    Months.push(x);\n  }\n\n  return Months;\n};\n\nconst monthFocus = month => {\n  let temps = this.state;\n  temps.focus = 100 + month;\n  this.setState({\n    temps\n  });\n  console.log(this.state);\n};\n\nexport default class Calendar extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // year focused = -(year), month = 100+month. Ex(January = 100), day = day (the twelvth = 12)\n      focus: -currYear\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Calendar\",\n        children: [/*#__PURE__*/_jsxDEV(\"body\", {\n          className: \"Year\",\n          children: `${currYear}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), getMonths().map(month => {\n          if (month < 4) {\n            style = {\n              top: `13%`,\n              left: `${24.67 * (month % 4) + month % 4 * .3}%`\n            };\n          } else if (month < 8) {\n            style = {\n              top: `42%`,\n              left: `${24.67 * (month % 4) + month % 4 * .3}%`\n            };\n          } else {\n            style = {\n              top: `71%`,\n              left: `${24.67 * (month % 4) + month % 4 * .3}%`\n            };\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Month\",\n            style: style,\n            children: [/*#__PURE__*/_jsxDEV(\"body\", {\n              className: \"mText\",\n              children: mOfYear[month]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"monthButton\",\n              onClick: function (e) {\n                monthFocus(month);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/Calendar.js"],"names":["React","ReactDOM","today","Date","currDay","String","getDay","currMonth","getMonth","currYear","getFullYear","mOfYear","style","getMonths","Months","x","push","monthFocus","month","temps","state","focus","setState","console","log","Calendar","Component","render","map","top","left","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nlet today = new Date();\r\nlet currDay = String(today.getDay()-1)\r\nlet currMonth = String(today.getMonth()+1);\r\nlet currYear = String(today.getFullYear());\r\nconst mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nlet style;\r\nlet getMonths=()=>{\r\n  let Months=[];\r\n  for(let x = 0; x < 12; x++){\r\n    Months.push(x);\r\n  }\r\n  return(Months);\r\n}\r\n\r\nconst monthFocus=(month)=>{\r\n    let temps = this.state;\r\n    temps.focus = 100 + month;\r\n    this.setState({temps});\r\n    console.log(this.state);\r\n}\r\nexport default class Calendar extends React.Component{\r\n    state = {\r\n        // year focused = -(year), month = 100+month. Ex(January = 100), day = day (the twelvth = 12)\r\n        focus: -currYear,\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"bg\">\r\n            <div className=\"Calendar\">\r\n                <body className=\"Year\">\r\n                {`${currYear}`}\r\n                </body>\r\n                {\r\n                getMonths().map(month => {\r\n                    if(month < 4){\r\n                    style = {\r\n                        top: `13%`,\r\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\r\n                    }\r\n                    } else if(month < 8){\r\n                    style = {\r\n                        top: `42%`,\r\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\r\n                    }\r\n                    } else{\r\n                    style = {\r\n                        top: `71%`,\r\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\r\n                    }\r\n                    }\r\n                    return(\r\n                    <div className=\"Month\" style = {style}>\r\n                        <body className = \"mText\">\r\n                        {mOfYear[month]}\r\n                        </body>\r\n                        <button className = 'monthButton' onClick = {function(e){monthFocus(month)}}></button>\r\n                    </div>\r\n                    );\r\n                })\r\n                }\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}