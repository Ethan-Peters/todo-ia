{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Peters\\\\ia_todolist_project\\\\my-app\\\\src\\\\TaskCreate.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Task from './Task.js';\nimport Calendar from './Calendar.js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet options = [['Date:', 'Time:', 'Title:', 'Description:'], ['65', '65', '67.5', '42', '50', '55'], ['25', '25', '22.5', '48', '40', '35'], ['text', 'text', 'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM', '', '', 'none']];\nlet prioChange;\nexport default class TaskCreate extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.prioChange = input => {\n      this.setState({\n        priority: input\n      });\n    };\n\n    this.handleSubmit = () => {\n      let newTask = new Task(this.state.date, this.state.time, this.state.title, this.state.description, this.state.category, this.state.priority);\n      console.log(newTask);\n    };\n\n    this.handleChange = (index, value) => {\n      switch (index) {\n        case 0:\n          this.setState({\n            date: value\n          });\n\n        case 1:\n          this.setState({\n            time: value\n          });\n          break;\n\n        case 2:\n          this.setState({\n            title: value\n          });\n          break;\n\n        case 3:\n          this.setState({\n            description: value\n          });\n          break;\n\n        case 4:\n          this.setState({\n            category: value\n          });\n          break;\n\n        case 5:\n          this.setState({\n            priority: value\n          });\n          break;\n      }\n    };\n\n    this.state = {\n      priority: 3\n    };\n  }\n\n  //render(){\n  //    return(\n  //        <div className='taskCreateWindow'>\n  //            <form onSubmit={(e)=>{e.preventDefault()}}>\n  //                <label className='taskCreateTitle'>\n  //                    Create Task\n  //                </label>\n  //                {\n  //                    options[0].map((option, i) => \n  //                        <label className='taskCreateTxt' style={{top: `${10*i + 10}%`}}>\n  //                            {option}\n  //                        </label>\n  //                    )\n  //                }\n  //                {\n  //                    options[0].map((option, i) => \n  //                    <input defaultValue={options[4][i]} onChange={(evt)=>this.handleChange(i, evt.target.value)} max={5} min={1} type={options[3][i]} className=' taskCreateInput' style={{left: '10%', top: `${10*i + 11}%`, height: '5%', width: `${options[1][i]}%`, left: `${options[2][i]}%`}}>\n  //                    \n  //                    </input>\n  //                )\n  //                }\n  //                <input type=\"range\" min=\"1\" max=\"5\" defaultValue={3} className=\"slider\" id=\"prioritySlide\" onChange={({ target: { value: radius } }) => this.prioChange(radius)}></input>\n  //                <label id=\"priority\" className='taskCreateTxt' style={{top: '61%'}} > Priority: {this.state.priority}</label>\n  //                <label className='taskCreateTxt' style={{top: '51%'}}>Category:</label>\n  //                <select className='taskCreateInput' style={{top: '51%', width: '55%', height: '8%', left: '40%'}}>\n  //                    <option value={'default'}></option>\n  //                    <option value={'+new'}>+new</option>\n  //                </select>\n  //                <input type =\"submit\" value=\"Create\" className='taskCreateInput' style={{bottom: '10%', left: '35%', width: '30%', textAlign: 'center'}} onClick={()=>this.handleSubmit()}/>\n  //            </form>\n  //        </div>\n  //    );\n  //}\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskCreateWindow\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"taskCreateTitle\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), options[0].map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"taskCreateTxt\",\n          style: {\n            top: `${10 * i + 10}%`\n          },\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/TaskCreate.js"],"names":["React","ReactDOM","Task","Calendar","useState","options","prioChange","TaskCreate","Component","input","setState","priority","handleSubmit","newTask","state","date","time","title","description","category","console","log","handleChange","index","value","render","map","option","i","top"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Task from './Task.js';\r\nimport Calendar from './Calendar.js';\r\nimport { useState } from 'react';\r\n\r\nlet options = [['Date:', 'Time:', 'Title:', 'Description:'],['65', '65', '67.5', '42', '50','55'],['25', '25', '22.5', '48', '40', '35'],['text', 'text',  'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM','', '', 'none']]\r\nlet prioChange;\r\nexport default class TaskCreate extends React.Component{\r\n    \r\n    //const [date, setDate]= useState('');\r\n    //const [time, setTime]= useState('');\r\n    //const [title, setTitle]= useState('');\r\n    //const [description, setDescription]= useState('');\r\n    prioChange = (input) =>{\r\n        this.setState({priority: input});\r\n    }\r\n    handleSubmit = () =>{\r\n        let newTask = new Task(this.state.date,this.state.time,this.state.title,this.state.description,this.state.category,this.state.priority);\r\n        console.log(newTask)\r\n    }\r\n    handleChange=(index, value)=>{\r\n        switch(index){\r\n            case 0:\r\n                this.setState({date: value});\r\n            case 1:\r\n                this.setState({time: value});\r\n                break;\r\n            case 2:\r\n                this.setState({title: value});\r\n                break;\r\n            case 3:\r\n                this.setState({description: value});\r\n                break;\r\n            case 4:\r\n                this.setState({category: value});\r\n                break;\r\n            case 5:\r\n                this.setState({priority: value});\r\n                break;\r\n        }\r\n    }\r\n    state = {\r\n        priority: 3\r\n    }\r\n    //render(){\r\n    //    return(\r\n    //        <div className='taskCreateWindow'>\r\n    //            <form onSubmit={(e)=>{e.preventDefault()}}>\r\n    //                <label className='taskCreateTitle'>\r\n    //                    Create Task\r\n    //                </label>\r\n    //                {\r\n    //                    options[0].map((option, i) => \r\n    //                        <label className='taskCreateTxt' style={{top: `${10*i + 10}%`}}>\r\n    //                            {option}\r\n    //                        </label>\r\n    //                    )\r\n    //                }\r\n    //                {\r\n    //                    options[0].map((option, i) => \r\n    //                    <input defaultValue={options[4][i]} onChange={(evt)=>this.handleChange(i, evt.target.value)} max={5} min={1} type={options[3][i]} className=' taskCreateInput' style={{left: '10%', top: `${10*i + 11}%`, height: '5%', width: `${options[1][i]}%`, left: `${options[2][i]}%`}}>\r\n    //                    \r\n    //                    </input>\r\n    //                )\r\n    //                }\r\n    //                <input type=\"range\" min=\"1\" max=\"5\" defaultValue={3} className=\"slider\" id=\"prioritySlide\" onChange={({ target: { value: radius } }) => this.prioChange(radius)}></input>\r\n    //                <label id=\"priority\" className='taskCreateTxt' style={{top: '61%'}} > Priority: {this.state.priority}</label>\r\n    //                <label className='taskCreateTxt' style={{top: '51%'}}>Category:</label>\r\n    //                <select className='taskCreateInput' style={{top: '51%', width: '55%', height: '8%', left: '40%'}}>\r\n    //                    <option value={'default'}></option>\r\n    //                    <option value={'+new'}>+new</option>\r\n    //                </select>\r\n    //                <input type =\"submit\" value=\"Create\" className='taskCreateInput' style={{bottom: '10%', left: '35%', width: '30%', textAlign: 'center'}} onClick={()=>this.handleSubmit()}/>\r\n    //            </form>\r\n    //        </div>\r\n    //    );\r\n    //}\r\n    render(){\r\n        return(\r\n        <div\r\n        className='taskCreateWindow'>\r\n            <form>\r\n                <label\r\n                className='taskCreateTitle'>\r\n                    Create Task\r\n                </label>\r\n                {\r\n                    options[0].map((option, i) => \r\n                        <label \r\n                        className='taskCreateTxt' \r\n                        style={{top: `${10*i + 10}%`}}>\r\n                            {option}\r\n                        </label>\r\n                    )\r\n                }\r\n                <input\r\n                type=\"text\"\r\n                required\r\n                value={date}\r\n                />\r\n            </form>\r\n        </div>);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}