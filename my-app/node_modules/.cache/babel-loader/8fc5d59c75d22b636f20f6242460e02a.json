{"ast":null,"code":"import Day from \"./Day.js\";\nimport Task from \"./Task.js\";\nimport Year from \"./Year\";\nimport Month from './Month';\nconst datesWithTasks = [];\nexport default class Calendar {\n  constructor() {\n    this.addTask = taskIn => {\n      console.log(\"ayy it ran\");\n      let flag = false;\n\n      for (let x = 0; x < datesWithTasks.length; x++) {\n        console.log(1);\n\n        if (taskIn.getYear() == datesWithTasks[x].getYear()) {\n          console.log(1);\n\n          for (let y = 0; y < datesWithTasks[x].getYear().getMonths().length; y++) {\n            if (taskIn.getMonth() == datesWithTasks[x].getYear().getMonths()[y].getMonth()) {\n              for (let i = 0; i < datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays().length; i++) {\n                if (taskIn.getDay() == datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays()[i].getDay()) {\n                  datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays()[i].getDay().addTask(taskIn);\n                  flag = true;\n                }\n              }\n\n              if (!flag) {\n                let day = new Day();\n                day.newDay(taskIn.getDay());\n                day.addTask(taskIn);\n                datesWithTasks[x].getYear().getMonths()[y].getMonth().addDay(day);\n                flag = true;\n              }\n            }\n          }\n\n          if (!flag) {\n            let month = new Month();\n            month.newMonth(taskIn.getMonth());\n            let day = new Day();\n            day.newDay(taskIn.getDay());\n            day.addTask(taskIn);\n            month.addDay(day);\n            datesWithTasks[x].getYear().addMonth(month);\n            flag = true;\n          }\n        }\n      }\n\n      if (!flag) {\n        let year = new Year();\n        year.newYear(taskIn.getYear());\n        let month = new Month();\n        month.newMonth(taskIn.getMonth());\n        let day = new Day();\n        day.newDay(taskIn.getDay());\n        day.addTask(taskIn);\n        month.addDay(day);\n        year.addMonth(month);\n        datesWithTasks.push(year);\n        flag = true;\n      }\n    };\n  }\n\n  getDatesWithTasks() {\n    return datesWithTasks;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/Calendar.js"],"names":["Day","Task","Year","Month","datesWithTasks","Calendar","addTask","taskIn","console","log","flag","x","length","getYear","y","getMonths","getMonth","i","getDays","getDay","day","newDay","addDay","month","newMonth","addMonth","year","newYear","push","getDatesWithTasks"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,cAAc,GAAG,EAAvB;AAEA,eAAe,MAAMC,QAAN,CAAc;AAAA;AAAA,SACzBC,OADyB,GAChBC,MAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAIC,IAAI,GAAG,KAAX;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,cAAc,CAACQ,MAAlC,EAA0CD,CAAC,EAA3C,EAA8C;AAC1CH,QAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;;AACA,YAAGF,MAAM,CAACM,OAAP,MAAkBT,cAAc,CAACO,CAAD,CAAd,CAAkBE,OAAlB,EAArB,EAAiD;AAC7CL,UAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;;AACA,eAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,cAAc,CAACO,CAAD,CAAd,CAAkBE,OAAlB,GAA4BE,SAA5B,GAAwCH,MAA3D,EAAmEE,CAAC,EAApE,EAAuE;AACnE,gBAAGP,MAAM,CAACS,QAAP,MAAmBZ,cAAc,CAACO,CAAD,CAAd,CAAkBE,OAAlB,GAA4BE,SAA5B,GAAwCD,CAAxC,EAA2CE,QAA3C,EAAtB,EAA4E;AACxE,mBAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGb,cAAc,CAACO,CAAD,CAAd,CAAkBE,OAAlB,GAA4BE,SAA5B,GAAwCD,CAAxC,EAA2CE,QAA3C,GAAsDE,OAAtD,GAAgEN,MAAnF,EAA2FK,CAAC,EAA5F,EAA+F;AAC3F,oBAAGV,MAAM,CAACY,MAAP,MAAiBf,cAAc,CAACO,CAAD,CAAd,CAAkBE,OAAlB,GAA4BE,SAA5B,GAAwCD,CAAxC,EAA2CE,QAA3C,GAAsDE,OAAtD,GAAgED,CAAhE,EAAmEE,MAAnE,EAApB,EAAgG;AAC5Ff,kBAAAA,cAAc,CAACO,CAAD,CAAd,CAAkBE,OAAlB,GAA4BE,SAA5B,GAAwCD,CAAxC,EAA2CE,QAA3C,GAAsDE,OAAtD,GAAgED,CAAhE,EAAmEE,MAAnE,GAA4Eb,OAA5E,CAAoFC,MAApF;AACAG,kBAAAA,IAAI,GAAG,IAAP;AACH;AACJ;;AACD,kBAAG,CAACA,IAAJ,EAAS;AACL,oBAAIU,GAAG,GAAG,IAAIpB,GAAJ,EAAV;AACAoB,gBAAAA,GAAG,CAACC,MAAJ,CAAWd,MAAM,CAACY,MAAP,EAAX;AACAC,gBAAAA,GAAG,CAACd,OAAJ,CAAYC,MAAZ;AACAH,gBAAAA,cAAc,CAACO,CAAD,CAAd,CAAkBE,OAAlB,GAA4BE,SAA5B,GAAwCD,CAAxC,EAA2CE,QAA3C,GAAsDM,MAAtD,CAA6DF,GAA7D;AACAV,gBAAAA,IAAI,GAAG,IAAP;AACH;AACJ;AACJ;;AACD,cAAG,CAACA,IAAJ,EAAS;AACL,gBAAIa,KAAK,GAAG,IAAIpB,KAAJ,EAAZ;AACAoB,YAAAA,KAAK,CAACC,QAAN,CAAejB,MAAM,CAACS,QAAP,EAAf;AACA,gBAAII,GAAG,GAAG,IAAIpB,GAAJ,EAAV;AACAoB,YAAAA,GAAG,CAACC,MAAJ,CAAWd,MAAM,CAACY,MAAP,EAAX;AACAC,YAAAA,GAAG,CAACd,OAAJ,CAAYC,MAAZ;AACAgB,YAAAA,KAAK,CAACD,MAAN,CAAaF,GAAb;AACAhB,YAAAA,cAAc,CAACO,CAAD,CAAd,CAAkBE,OAAlB,GAA4BY,QAA5B,CAAqCF,KAArC;AACAb,YAAAA,IAAI,GAAG,IAAP;AACH;AACJ;AACJ;;AACD,UAAG,CAACA,IAAJ,EAAS;AACL,YAAIgB,IAAI,GAAG,IAAIxB,IAAJ,EAAX;AACAwB,QAAAA,IAAI,CAACC,OAAL,CAAapB,MAAM,CAACM,OAAP,EAAb;AACA,YAAIU,KAAK,GAAG,IAAIpB,KAAJ,EAAZ;AACAoB,QAAAA,KAAK,CAACC,QAAN,CAAejB,MAAM,CAACS,QAAP,EAAf;AACA,YAAII,GAAG,GAAG,IAAIpB,GAAJ,EAAV;AACAoB,QAAAA,GAAG,CAACC,MAAJ,CAAWd,MAAM,CAACY,MAAP,EAAX;AACAC,QAAAA,GAAG,CAACd,OAAJ,CAAYC,MAAZ;AACAgB,QAAAA,KAAK,CAACD,MAAN,CAAaF,GAAb;AACAM,QAAAA,IAAI,CAACD,QAAL,CAAcF,KAAd;AACAnB,QAAAA,cAAc,CAACwB,IAAf,CAAoBF,IAApB;AACAhB,QAAAA,IAAI,GAAG,IAAP;AACH;AACJ,KAlDwB;AAAA;;AAmDzBmB,EAAAA,iBAAiB,GAAE;AACf,WAAOzB,cAAP;AACH;;AArDwB","sourcesContent":["import Day from \"./Day.js\";\r\nimport Task from \"./Task.js\";\r\nimport Year from \"./Year\";\r\nimport Month from './Month';\r\n\r\nconst datesWithTasks = [];\r\n\r\nexport default class Calendar{\r\n    addTask=(taskIn)=>{\r\n        console.log(\"ayy it ran\");\r\n        let flag = false;\r\n        for(let x = 0; x < datesWithTasks.length; x++){\r\n            console.log(1);\r\n            if(taskIn.getYear()==datesWithTasks[x].getYear()){\r\n                console.log(1);\r\n                for(let y = 0; y < datesWithTasks[x].getYear().getMonths().length; y++){\r\n                    if(taskIn.getMonth()==datesWithTasks[x].getYear().getMonths()[y].getMonth()){\r\n                        for(let i = 0; i < datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays().length; i++){\r\n                            if(taskIn.getDay()==datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays()[i].getDay()){\r\n                                datesWithTasks[x].getYear().getMonths()[y].getMonth().getDays()[i].getDay().addTask(taskIn);\r\n                                flag = true;\r\n                            }\r\n                        }\r\n                        if(!flag){\r\n                            let day = new Day();\r\n                            day.newDay(taskIn.getDay());\r\n                            day.addTask(taskIn);\r\n                            datesWithTasks[x].getYear().getMonths()[y].getMonth().addDay(day);\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                }\r\n                if(!flag){\r\n                    let month = new Month();\r\n                    month.newMonth(taskIn.getMonth());\r\n                    let day = new Day();\r\n                    day.newDay(taskIn.getDay());\r\n                    day.addTask(taskIn);\r\n                    month.addDay(day);\r\n                    datesWithTasks[x].getYear().addMonth(month);\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n        if(!flag){\r\n            let year = new Year();\r\n            year.newYear(taskIn.getYear());\r\n            let month = new Month();\r\n            month.newMonth(taskIn.getMonth());\r\n            let day = new Day();\r\n            day.newDay(taskIn.getDay());\r\n            day.addTask(taskIn);\r\n            month.addDay(day);\r\n            year.addMonth(month);\r\n            datesWithTasks.push(year);\r\n            flag = true;\r\n        }\r\n    }\r\n    getDatesWithTasks(){\r\n        return datesWithTasks;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}