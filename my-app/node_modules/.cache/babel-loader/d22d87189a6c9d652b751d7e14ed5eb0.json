{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Peters\\\\ia_todolist_project\\\\my-app\\\\src\\\\App.js\";\nimport './App.css';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\nimport Task from './Task.js';\nimport User from './User.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Parent = () => {\n  var _s = $RefreshSig$();\n\n  return App();\n  let today = new Date();\n  const defaultUser = new User();\n\n  const App = () => {\n    _s();\n\n    const [date, setDate] = useState('12/22/2021');\n    const [time, setTime] = useState('hh:mm AM/PM');\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [year, setYear] = useState(`${today.getFullYear()}`);\n    const [user, setUser] = useState(defaultUser);\n    const [mVisuals, setMVisuals] = useState(['', '', '', '', '', '', '', '', '', '', '', '']);\n    const [compVisible, setCompVisible] = useState(['block', 'none']);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg\",\n      style: {\n        display: `${compVisible[0]}`\n      },\n      children: [taskCreate([date, setDate], [time, setTime], [title, setTitle], [description, setDescription]), Calendar([year, setYear], [user, setUser], [mVisuals, setMVisuals], [compVisible, setCompVisible])]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(App, \"bZV2Vsr0q3lQti3ETdRJEj9Qva4=\");\n\n  const taskCreate = (_ref, _ref2, _ref3, _ref4) => {\n    let [date, setDate] = _ref;\n    let [time, setTime] = _ref2;\n    let [title, setTitle] = _ref3;\n    let [description, setDescription] = _ref4;\n    const options = [['Date:', 'Time:', 'Title:', 'Description:'], ['65', '65', '67.5', '42', '50', '55'], ['25', '25', '22.5', '48', '40', '35'], ['text', 'text', 'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM', '', '', 'none']];\n\n    const getStyle = i => {\n      return {\n        left: `${options[2][i]}%`,\n        width: `${options[1][i]}%`,\n        top: `${10 * i + 10}%`\n      };\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n\n      if (date.split(\"/\")[0].length == 2 && date.split(\"/\")[1].length == 2 && date.split(\"/\")[2].length == 4 && !isNaN(date.split(\"/\")[0]) && !isNaN(date.split(\"/\")[1]) && !isNaN(date.split(\"/\")[2])) {\n        let task = new Task();\n        task.newTask(date, time, title, description);\n        defaultUser.addTask(task);\n      } else alert(\"Your date is likely formated incorrectly. Try doing so in the mm/dd/yyyy format\");\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskCreateWindow\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"taskCreateTitle\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), options[0].map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"taskCreateTxt\",\n          style: {\n            top: `${10 * i + 10}%`\n          },\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"taskCreateInput\",\n          type: \"text\",\n          required: true,\n          value: date,\n          onChange: e => {\n            setDate(e.target.value);\n          },\n          style: getStyle(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"taskCreateInput\",\n          type: \"text\",\n          required: true,\n          value: time,\n          onChange: e => {\n            setTime(e.target.value);\n          },\n          style: getStyle(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"taskCreateInput\",\n          type: \"text\",\n          required: true,\n          value: title,\n          onChange: e => {\n            setTitle(e.target.value);\n          },\n          style: getStyle(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"taskCreateInput\",\n          type: \"text\",\n          required: true,\n          value: description,\n          onChange: e => {\n            setDescription(e.target.value);\n          },\n          style: getStyle(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            position: 'absolute',\n            top: '80%',\n            height: '10%',\n            width: '40%',\n            left: '30%'\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Calendar = (_ref5, _ref6, _ref7, _ref8) => {\n    let [year, setYear] = _ref5;\n    let [user, setUser] = _ref6;\n    let [mVisuals, setMVisuals] = _ref7;\n    let [compVisible, setCompVisible] = _ref8;\n    let currYear = String(today.getFullYear());\n    let style;\n    const mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const monthFocus = month => {\n      let tempArr = compVisible;\n      tempArr[0] = 'none';\n      setCompVisible(tempArr);\n      console.log(compVisible.toString());\n    };\n\n    const getMonths = () => {\n      let Months = [];\n\n      for (let x = 0; x < 12; x++) {\n        Months.push(x);\n      }\n\n      return Months;\n    };\n\n    const getMonthVisuals = i => {\n      user.getCalendar().getDatesWithTasks().forEach(xYear => {\n        if (xYear.getYear() == currYear) {\n          xYear.getMonths().forEach(month => {\n            if (parseInt(month.getTotalPrio()) > 0) {\n              console.log(month.getTotalPrio());\n              let tempArr = mVisuals;\n              tempArr[month.getMonth() - 1] = `☆ ${month.getTotalPrio()}`;\n              setMVisuals(tempArr);\n              console.log(month.getTotalPrio());\n            } else {\n              let tempArr = mVisuals;\n              tempArr[month.getMonth() - 1] = '';\n              setMVisuals(tempArr);\n            }\n          });\n          console.log(currYear);\n          return;\n        } else {\n          setMVisuals(['', '', '', '', '', '', '', '', '', '', '', '']);\n        }\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"Year\",\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), getMonths().map(month => {\n        if (month < 4) {\n          style = {\n            top: `13%`,\n            left: `${24.67 * (month % 4) + month % 4 * .3}%`\n          };\n        } else if (month < 8) {\n          style = {\n            top: `42%`,\n            left: `${24.67 * (month % 4) + month % 4 * .3}%`\n          };\n        } else {\n          style = {\n            top: `71%`,\n            left: `${24.67 * (month % 4) + month % 4 * .3}%`\n          };\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Month\",\n          style: style,\n          children: [/*#__PURE__*/_jsxDEV(\"body\", {\n            className: \"mText\",\n            children: mOfYear[month]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mText\",\n            style: {\n              left: \"40%\",\n              position: 'absolute'\n            },\n            children: mVisuals[month]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"monthButton\",\n            onClick: () => monthFocus(month)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"taskCreateInput\",\n        style: {\n          position: 'absolute',\n          left: '35%',\n          width: '2em',\n          top: \"3%\"\n        },\n        onClick: () => {\n          currYear = parseInt(year) - 1;\n          setYear(currYear);\n          getMonthVisuals();\n        },\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"taskCreateInput\",\n        style: {\n          position: 'absolute',\n          left: '57%',\n          width: '2em',\n          top: \"3%\"\n        },\n        onClick: () => {\n          currYear = parseInt(year) + 1;\n          setYear(currYear);\n          getMonthVisuals();\n        },\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  };\n};\n\n_c = Parent;\nexport default Parent;\n\nvar _c;\n\n$RefreshReg$(_c, \"Parent\");","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/App.js"],"names":["useReducer","useState","React","Task","User","Parent","App","today","Date","defaultUser","date","setDate","time","setTime","title","setTitle","description","setDescription","year","setYear","getFullYear","user","setUser","mVisuals","setMVisuals","compVisible","setCompVisible","display","taskCreate","Calendar","options","getStyle","i","left","width","top","handleSubmit","e","preventDefault","split","length","isNaN","task","newTask","addTask","alert","map","option","target","value","position","height","currYear","String","style","mOfYear","monthFocus","month","tempArr","console","log","toString","getMonths","Months","x","push","getMonthVisuals","getCalendar","getDatesWithTasks","forEach","xYear","getYear","parseInt","getTotalPrio","getMonth"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useReducer, useState } from 'react';\nimport React from 'react';\nimport Task from './Task.js';\nimport User from './User.js';\n\nconst Parent=()=>{\n  return( App());\n  let today = new Date();\n  const defaultUser = new User;\n  const App=()=>{\n    const [date, setDate]  = useState('12/22/2021');\n    const [time, setTime]  = useState('hh:mm AM/PM');\n    const [title, setTitle]  = useState('');\n    const [description, setDescription]  = useState('');\n    const [year, setYear] = useState(`${today.getFullYear()}`);\n    const [user, setUser] = useState(defaultUser);\n    const [mVisuals, setMVisuals] = useState(['','','','','','','','','','','','']);\n    const [compVisible, setCompVisible] = useState(['block', 'none']);\n    return (\n      <div\n      className='bg'\n      style={{display: `${compVisible[0]}`}}>\n        {taskCreate([date, setDate], [time, setTime], [title, setTitle], [description, setDescription])}\n        {Calendar( [year, setYear], [user, setUser], [mVisuals, setMVisuals], [compVisible, setCompVisible])}\n      </div>\n    );\n  }\n  const taskCreate = ([date, setDate], [time, setTime], [title, setTitle], [description, setDescription]) =>{\n    const options = [['Date:', 'Time:', 'Title:', 'Description:'],['65', '65', '67.5', '42', '50','55'],['25', '25', '22.5', '48', '40', '35'],['text', 'text',  'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM','', '', 'none']]\n    const getStyle = (i) => {\n      return({\n        left:`${options[2][i]}%`, \n        width: `${options[1][i]}%`,\n        top: `${10*i + 10}%`\n      });\n    }\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      if(date.split(\"/\")[0].length == 2 && date.split(\"/\")[1].length == 2 && date.split(\"/\")[2].length == 4 && !isNaN(date.split(\"/\")[0])&& !isNaN(date.split(\"/\")[1])&& !isNaN(date.split(\"/\")[2])){\n        let task = new Task;\n        task.newTask(date, time, title, description);\n        defaultUser.addTask(task);\n      } else alert(\"Your date is likely formated incorrectly. Try doing so in the mm/dd/yyyy format\");\n    }\n    return(\n      <div\n      className='taskCreateWindow'>\n          <form onSubmit={handleSubmit}>\n              <label\n              className='taskCreateTitle'>\n                  Create Task\n              </label>\n              {\n                  options[0].map((option, i) => \n                      <label \n                      className='taskCreateTxt' \n                      style={{top: `${10*i + 10}%`}}>\n                          {option}\n                      </label>\n                  )\n              }\n              <input\n              className=\"taskCreateInput\"\n              type=\"text\"\n              required\n              value={date}\n              onChange = {(e)=>{setDate(e.target.value)}}\n              style = {getStyle(0)}\n              />\n              <input\n              className=\"taskCreateInput\"\n              type=\"text\"\n              required\n              value={time}\n              onChange = {(e)=>{setTime(e.target.value)}}\n              style = {getStyle(1)}\n              />\n              <input\n              className=\"taskCreateInput\"\n              type=\"text\"\n              required\n              value={title}\n              onChange = {(e)=>{setTitle(e.target.value)}}\n              style = {getStyle(2)}\n              />\n              <input\n              className=\"taskCreateInput\"\n              type=\"text\"\n              required\n              value={description}\n              onChange = {(e)=>{setDescription(e.target.value)}}\n              style = {getStyle(3)}\n              />\n              <button\n              style = {{position: 'absolute', top: '80%', height: '10%', width: '40%', left: '30%'}}>\n                Create\n              </button>\n          </form>\n      </div>\n    );\n  }\n  const Calendar = ([year, setYear], [user, setUser], [mVisuals, setMVisuals], [compVisible, setCompVisible]) => {\n    let currYear = String(today.getFullYear());\n    let style;\n    const mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const monthFocus=(month)=>{\n        let tempArr = compVisible;\n        tempArr[0] = 'none';\n        setCompVisible(tempArr);\n        console.log(compVisible.toString());\n    }\n    const getMonths=()=>{\n      let Months=[];\n      for(let x = 0; x < 12; x++){\n        Months.push(x);\n      }\n      return(Months);\n    }\n    const getMonthVisuals=(i)=>{\n      user.getCalendar().getDatesWithTasks().forEach(xYear => {\n        if(xYear.getYear() == currYear){\n          xYear.getMonths().forEach(month => {\n            if(parseInt(month.getTotalPrio()) > 0){\n              console.log(month.getTotalPrio());\n              let tempArr = mVisuals;\n              tempArr[month.getMonth()-1] = `☆ ${month.getTotalPrio()}`;\n              setMVisuals(tempArr);\n              console.log(month.getTotalPrio());\n            }\n            else{\n              let tempArr = mVisuals;\n              tempArr[month.getMonth()-1] = '';\n              setMVisuals(tempArr);\n            }\n          });\n          console.log(currYear);\n          return;\n        }\n        else{\n          setMVisuals(['','','','','','','','','','','','']);\n        }\n      });\n    }\n    return(\n      <div \n      className=\"Calendar\">\n        <label className='Year'>{year}</label>\n        {\n          getMonths().map(month => {\n              if(month < 4){\n              style = {\n                  top: `13%`,\n                  left: `${24.67*(month%4)+(month%4)*.3}%`\n              }\n              } else if(month < 8){\n              style = {\n                  top: `42%`,\n                  left: `${24.67*(month%4)+(month%4)*.3}%`\n              }\n              } else{\n              style = {\n                  top: `71%`,\n                  left: `${24.67*(month%4)+(month%4)*.3}%`\n              }\n              }\n              return(\n                <div \n                className=\"Month\" style = {style}>\n                    <body \n                    className = \"mText\">\n                      {mOfYear[month]}\n                    </body>\n                    <label className='mText' style = {{left: \"40%\", position: 'absolute'}}>\n                      {\n                        mVisuals[month]\n                      }\n                    </label>\n                    <button \n                    className = 'monthButton' \n                    onClick = {() => monthFocus(month)} >\n                    </button>\n                </div>\n              );\n          })\n        }\n        <button className='taskCreateInput' style = {{position: 'absolute', left: '35%', width: '2em', top: \"3%\"}} onClick = {()=>{currYear = parseInt(year)-1; setYear(currYear);  getMonthVisuals(); }}>←</button>\n        <button className='taskCreateInput' style = {{position: 'absolute', left: '57%', width: '2em', top: \"3%\"}} onClick = {()=>{currYear = parseInt(year)+1; setYear(currYear); getMonthVisuals(); }}>→</button>\n      </div>\n    );\n  }\n}\nexport default Parent;"]},"metadata":{},"sourceType":"module"}