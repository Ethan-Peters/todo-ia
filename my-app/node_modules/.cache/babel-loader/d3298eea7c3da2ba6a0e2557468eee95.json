{"ast":null,"code":"import Day from \"./Day.js\";\nimport Task from \"./Task.js\";\nimport Year from \"./Year\";\nimport Month from './Month';\nexport default class Calendar {\n  constructor() {\n    this.addTask = taskIn => {\n      let flag = false;\n\n      for (let x = 0; x < this.datesWithTasks.length; x++) {\n        if (taskIn.getYear() == this.datesWithTasks[x].getYear()) {\n          console.log(\"true check 1\");\n\n          for (let y = 0; y < this.datesWithTasks[x].getMonths().length; y++) {\n            console.log(1);\n\n            if (taskIn.getMonth() == this.datesWithTasks[x].getMonths()[y].getMonth()) {\n              for (let i = 0; i < this.datesWithTasks[x].getMonths()[y].getDays().length; i++) {\n                if (taskIn.getDay() == this.datesWithTasks[x].getMonths()[y].getDays()[i].getDay()) {\n                  console.log(2);\n                  this.datesWithTasks[x].getMonths()[y].getDays()[i].addTask(taskIn);\n                  flag = true;\n                }\n              }\n\n              if (!flag) {\n                console.log(3);\n                let day = new Day();\n                day.newDay(taskIn.getDay());\n                day.addTask(taskIn);\n                this.datesWithTasks[x].getMonths()[y].getMonth().addDay(day);\n                flag = true;\n              }\n            }\n          }\n\n          if (!flag) {\n            console.log(4);\n            let month = new Month();\n            month.newMonth(taskIn.getMonth());\n            let day = new Day();\n            day.newDay(taskIn.getDay());\n            day.addTask(taskIn);\n            month.addDay(day);\n            this.datesWithTasks[x].addMonth(month);\n            flag = true;\n          }\n        }\n      }\n\n      if (!flag) {\n        console.log(5);\n        let year = new Year();\n        year.newYear(taskIn.getYear());\n        let month = new Month();\n        month.newMonth(taskIn.getMonth());\n        let day = new Day();\n        day.newDay(taskIn.getDay());\n        day.addTask(taskIn);\n        month.addDay(day);\n        year.addMonth(month);\n        this.datesWithTasks.push(year);\n        flag = true;\n      }\n    };\n\n    this.datesWithTasks = [];\n  }\n\n  getDatesWithTasks() {\n    return this.datesWithTasks;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/Calendar.js"],"names":["Day","Task","Year","Month","Calendar","constructor","addTask","taskIn","flag","x","datesWithTasks","length","getYear","console","log","y","getMonths","getMonth","i","getDays","getDay","day","newDay","addDay","month","newMonth","addMonth","year","newYear","push","getDatesWithTasks"],"mappings":"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","sourcesContent":["import Day from \"./Day.js\";\r\nimport Task from \"./Task.js\";\r\nimport Year from \"./Year\";\r\nimport Month from './Month';\r\n\r\nexport default class Calendar{\r\n    constructor(){\r\n        this.datesWithTasks = [];\r\n    }\r\n    addTask=(taskIn)=>{\r\n        let flag = false;\r\n        for(let x = 0; x < this.datesWithTasks.length; x++){\r\n            if(taskIn.getYear()==this.datesWithTasks[x].getYear()){\r\n                console.log(\"true check 1\");\r\n                for(let y = 0; y < this.datesWithTasks[x].getMonths().length; y++){\r\n                    console.log(1);\r\n                    if(taskIn.getMonth()==this.datesWithTasks[x].getMonths()[y].getMonth()){\r\n                        for(let i = 0; i < this.datesWithTasks[x].getMonths()[y].getDays().length; i++){\r\n                            if(taskIn.getDay()==this.datesWithTasks[x].getMonths()[y].getDays()[i].getDay()){\r\n                                console.log(2);\r\n                                this.datesWithTasks[x].getMonths()[y].getDays()[i].addTask(taskIn);\r\n                                flag = true;\r\n                            }\r\n                        }\r\n                        if(!flag){\r\n                            console.log(3);\r\n                            let day = new Day();\r\n                            day.newDay(taskIn.getDay());\r\n                            day.addTask(taskIn);\r\n                            this.datesWithTasks[x].getMonths()[y].getMonth().addDay(day);\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                }\r\n                if(!flag){\r\n                    console.log(4);\r\n                    let month = new Month();\r\n                    month.newMonth(taskIn.getMonth());\r\n                    let day = new Day();\r\n                    day.newDay(taskIn.getDay());\r\n                    day.addTask(taskIn);\r\n                    month.addDay(day);\r\n                    this.datesWithTasks[x].addMonth(month);\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n        if(!flag){\r\n            console.log(5);\r\n            let year = new Year();\r\n            year.newYear(taskIn.getYear());\r\n            let month = new Month();\r\n            month.newMonth(taskIn.getMonth());\r\n            let day = new Day();\r\n            day.newDay(taskIn.getDay());\r\n            day.addTask(taskIn);\r\n            month.addDay(day);\r\n            year.addMonth(month);\r\n            this.datesWithTasks.push(year);\r\n            flag = true;\r\n        }\r\n    }\r\n    getDatesWithTasks(){\r\n        return this.datesWithTasks;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}