{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ethan Peters\\\\ia_todolist_project\\\\my-app\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Front from './front.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg\",\n    children: [taskCreate(), Calendar()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst taskCreate = () => {\n  const options = [['Date:', 'Time:', 'Title:', 'Description:'], ['65', '65', '67.5', '42', '50', '55'], ['25', '25', '22.5', '48', '40', '35'], ['text', 'text', 'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM', '', '', 'none']];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskCreateWindow\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"taskCreateTitle\",\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), options[0].map((option, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"taskCreateTxt\",\n        style: {\n          top: `${10 * i + 10}%`\n        },\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nconst Calendar = () => {\n  let today = new Date();\n  let currDay = String(today.getDay() - 1);\n  let currMonth = String(today.getMonth() + 1);\n  let currYear = String(today.getFullYear());\n  let style;\n  const mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const monthFocus = month => {\n    this.setState({\n      focus: 100 + month\n    });\n  };\n\n  const getMonths = () => {\n    let Months = [];\n\n    for (let x = 0; x < 12; x++) {\n      Months.push(x);\n    }\n\n    return Months;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"Year\",\n      children: `${currYear}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), getMonths().map(month => {\n      if (month < 4) {\n        style = {\n          top: `13%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      } else if (month < 8) {\n        style = {\n          top: `42%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      } else {\n        style = {\n          top: `71%`,\n          left: `${24.67 * (month % 4) + month % 4 * .3}%`\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Month\",\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"body\", {\n          className: \"mText\",\n          children: mOfYear[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"monthButton\",\n          onClick: () => this.monthFocus(month)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n/*<div className='bg'>\n                <Calendar id = 'cal'/>\n                <TaskCreate id = 'tCreate'/>\n            </div>\n*/\n\n\n_c2 = Calendar;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"sources":["C:/Users/Ethan Peters/ia_todolist_project/my-app/src/App.js"],"names":["logo","Front","App","taskCreate","Calendar","options","map","option","i","top","today","Date","currDay","String","getDay","currMonth","getMonth","currYear","getFullYear","style","mOfYear","monthFocus","month","setState","focus","getMonths","Months","x","push","left"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Front from './front.js';\n\n\n\nconst App=()=>{\n  return (\n    <div\n    className='bg'>\n      {taskCreate()}\n      {Calendar()}\n    </div>\n  );\n}\nconst taskCreate = () =>{\n  const options = [['Date:', 'Time:', 'Title:', 'Description:'],['65', '65', '67.5', '42', '50','55'],['25', '25', '22.5', '48', '40', '35'],['text', 'text',  'text', 'text', 'text'], ['mm/dd/yyyy', 'hh:mm AM/PM','', '', 'none']]\n  return(\n    <div\n    className='taskCreateWindow'>\n        <form>\n            <label\n            className='taskCreateTitle'>\n                Create Task\n            </label>\n            {\n                options[0].map((option, i) => \n                    <label \n                    className='taskCreateTxt' \n                    style={{top: `${10*i + 10}%`}}>\n                        {option}\n                    </label>\n                )\n            }\n            <input\n            type=\"text\"\n            required\n            />\n        </form>\n    </div>\n  );\n}\nconst Calendar = () => {\n  let today = new Date();\n  let currDay = String(today.getDay()-1)\n  let currMonth = String(today.getMonth()+1);\n  let currYear = String(today.getFullYear());\n  let style;\n  const mOfYear = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const monthFocus=(month)=>{\n      this.setState({focus: 100+month});\n  }\n  const getMonths=()=>{\n    let Months=[];\n    for(let x = 0; x < 12; x++){\n      Months.push(x);\n    }\n    return(Months);\n  }\n  return(\n    <div \n    className=\"Calendar\">\n                <body \n                className=\"Year\">\n                  {`${currYear}`}\n                </body>\n                {\n                getMonths().map(month => {\n                    if(month < 4){\n                    style = {\n                        top: `13%`,\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\n                    }\n                    } else if(month < 8){\n                    style = {\n                        top: `42%`,\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\n                    }\n                    } else{\n                    style = {\n                        top: `71%`,\n                        left: `${24.67*(month%4)+(month%4)*.3}%`\n                    }\n                    }\n                    return(\n                    <div \n                    className=\"Month\" style = {style}>\n                        <body \n                        className = \"mText\">\n                          {mOfYear[month]}\n                        </body>\n                        <button \n                        className = 'monthButton' \n                        onClick = {() => this.monthFocus(month)} >\n\n                        </button>\n                    </div>\n                    );\n                })\n                }\n            </div>\n  );\n}\n/*<div className='bg'>\n                <Calendar id = 'cal'/>\n                <TaskCreate id = 'tCreate'/>\n            </div>\n*/\nexport default App;"]},"metadata":{},"sourceType":"module"}